<?xml version="1.0" encoding="UTF-8"?>
<project name="GoTravelling" default="default" basedir="../../../../../">

    <description>Builds, tests, and runs the project GoTravelling.</description>

    <property file = "src/main/resources/profiles/prod/build.properties"/>
    <property environment="${environment}"/>
    <property name="project" value="GoTravelling"/>
    <property name="package" value="GoTravelling"/>

    <property name="config.dir" location="../../../" />
    <!--<property name="doc.dir" location="target/ant/javadoc"/>-->
    <property name="web.root" location="../../../webapp" />

    <property name="lib.dir" location="target/dependency"/>
    <property name="test.dir" location="../../../../test/java"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <target name="makedir" description="建立文件夹">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${test.dir}"/>
    </target>

    <target name="compile" depends="makedir" description="编译代码">
        <!-- 编译所有的代码,Server and client -->
        <javac srcdir="${src.dir}"
               destdir="${build.dir}"
               encoding="UTF-8"
               includeantruntime="no"
               excludes="**/test/*,**/test/bean/*,**/*.svn,*.svn"
               includes="**/*.java"
               source="1.8"
               target="1.8"
               deprecation="true"
               failonerror="true"
               debug="true">
            <classpath refid="classpath" />
        </javac>

        <!-- 把所有文件copy到build目录 -->
        <copy todir="${build.dir}">
            <fileset dir="${config.dir}" includes="**/*.xml,**/*.properties" excludes="**/*.java"/>
        </copy>
    </target>

    <!--生成Javadoc 文档 -->
    <!--    <target name="javadoc" description="生成Javadoc文档.">
            <delete dir="${doc.dir}"/>
            <mkdir dir="${doc.dir}"/>
            <javadoc destdir="${doc.dir}" windowtitle="${project} Javadoc" use="yes"
                     linksource="no" splitindex="yes" encoding="UTF-8"
                     docencoding="UTF-8" locale="zh_CN">
                <classpath refid="classpath"/>
                <packageset dir="${src.dir}" defaultexcludes="yes">
                    <include name="${domain}/${package}/**"/>
                </packageset>
            </javadoc>
        </target>-->

    <target name="package" depends="compile" description="打包成Jar" >
        <mkdir dir="${dist.dir}/${version}" />
        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss"/>
            <format property="TIME" pattern="yyMMddHHmm"/>
        </tstamp>

        <manifest file="${web.root}/META-INF/MANIFEST.MF">
            <attribute name="Created-By" value="${author}"/>
            <attribute name="Built-Date" value="${TODAY}"/>
            <attribute name="Implementation-Title" value="${project}"/>
            <attribute name="Implementation-Version" value="${version}"/>
            <attribute name="Implementation-Vendor" value="${vendor}"/>
        </manifest>

        <!-- 打包所有的编译文件 -->
        <jar jarfile="${dist.dir}/${version}/${domain}.${package}.${project}.bin.${version}.v${TIME}.jar"
             basedir="${build.dir}" manifest="${web.root}/META-INF/MANIFEST.MF">
        </jar>

        <!-- 生成Web配置及部署文件 -->
        <!--destfile="${dist.dir}/${version}/${project}.v${TIME}.war"-->
        <war destfile="${dist.dir}/${version}/${project}.war"
             webxml="${web.root}/WEB-INF/web.xml" manifest="${web.root}/META-INF/MANIFEST.MF">
            <fileset dir="${web.root}" excludes="${web.root}/WEB-INF/classes/*"></fileset>
            <classes dir="${build.dir}" />
            <lib dir="${lib.dir}" includes="**/*.jar" />
        </war>

        <!--
          <jar jarfile="${dist.dir}/${version}/${domain}.${package}.${project}.client.bin.${version}.v${TIME}.jar"
               basedir="${client.build.dir}" manifest="${web.root}/META-INF/MANIFEST.MF">
          </jar>
          <jar jarfile="${dist.dir}/${version}/${domain}.${project}.sources.${version}.jar"
               basedir="${src.dir}" manifest="${web.root}/META-INF/MANIFEST.MF">
          </jar>
          <jar jarfile="${dist.dir}/${version}/${domain}.${project}.testsource.${version}.jar"
              basedir="${test.dir}" manifest="${web.root}/META-INF/MANIFEST.MF">
          </jar>

          <jar jarfile="${dist.dir}/${version}/${domain}.${project}.javadoc.${version}.jar"
              basedir="${doc.dir}" manifest="${web.root}/META-INF/MANIFEST.MF"/>
          -->
    </target>

    <target name="deploy" depends="package" description="Deploy application">
        <echo>部署项目</echo>
        <delete file="${tomcat.home}/webapps/${project}.war" />
        <delete dir="${tomcat.home}/webapps/${project}" />
        <copy todir="${deploy.path}"
              preservelastmodified="true">
            <fileset dir="${dist.dir}/${version}">
                <include name="*.war"/>
            </fileset>
        </copy>
    </target>

    <target name="destory" description="最后的清理" >
        <delete  includeemptydirs="true">
            <fileset dir="${build.dir}" includes="**/*" />
        </delete>
    </target>
    <target name="default" depends="deploy,destory">
    </target>

    <!--shutdowntomcat -->

    <!--    <target name="shutdowntomcat" description="========shutdowntomcat===========">
            <echo message="正在关闭服务器。。。" />
            <exec executable="${tomcat.home}/bin/shutdown.bat" failonerror="false"></exec>
            <echo message="服务器成功关闭" />
            <sleep seconds="10"/>
        </target>-->

    <!--startuptomcat -->
    <!--    <target name="startuptomcat" description="========startuptomcat===========">
            <sleep seconds="5"/>
            <echo message="正在启动服务器。。。" />
            <exec executable="${tomcat.home}/bin/startup.bat" failonerror="false"></exec>
            <echo message="服务器启动成功" />
        </target>-->

</project>